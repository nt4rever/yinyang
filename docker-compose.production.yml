services:
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: 'production'
        WWWUSER: ${HOST_UID:-1000}
        WWWGROUP: ${HOST_GID:-1000}
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "6001:6001"
      - "8080:8080"
    networks:
      - yinyang_network

  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: yinyang
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - yinyang_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yinyang"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.4.0-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - yinyang_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z-cpuv1
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - yinyang_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  yinyang_network:
    driver: bridge
